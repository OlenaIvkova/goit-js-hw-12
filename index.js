/* empty css                      */import{a as q,S,i as m}from"./assets/vendor-u8rapaCG.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))l(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&l(n)}).observe(document,{childList:!0,subtree:!0});function s(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function l(t){if(t.ep)return;t.ep=!0;const o=s(t);fetch(t.href,o)}})();const E="46125856-848a47cf49f0e2da350750fba",v="https://pixabay.com/api/",y=async(e,r=1)=>{try{const s=await q.get(`${v}`,{params:{key:E,q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:r}});if(s.status!==200)throw new Error("Error fetching images");return s.data}catch(s){throw console.error(s),s}},M=new S(".gallery a"),f=e=>{const r=document.querySelector(".gallery");if(e.length===0){m.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"});return}const s=e.map(({webformatURL:l,largeImageURL:t,tags:o,likes:n,views:L,comments:w,downloads:b})=>`
            <li class="gallery-item">
                <a href="${t}" class="gallery-link">
                    <img src="${l}" alt="${o}" class="gallery-image" />
                </a>
                <div class="info">
                    <p class="info-item"><span>Likes:</span> ${n}</p>
                    <p class="info-item"><span>Views:</span> ${L}</p>
                    <p class="info-item"><span>Comments:</span> ${w}</p>
                    <p class="info-item"><span>Downloads:</span> ${b}</p>
                </div>
            </li>
        `).join("");r.insertAdjacentHTML("beforeend",s),M.refresh()},$=()=>{document.querySelector(".gallery").innerHTML=""},p=()=>{const e=document.querySelector(".loader");e&&(e.style.display="block")},h=()=>{const e=document.querySelector(".loader");e&&(e.style.display="none")},B=()=>{const e=document.querySelector(".load-more");e.style.display="block"},d=()=>{const e=document.querySelector(".load-more");e.style.display="none"},g=()=>{m.info({title:"Info",message:"We're sorry, but you've reached the end of search results."})},P=document.querySelector(".search-form"),i=document.createElement("button");i.classList.add("load-more");i.textContent="Load more";i.style.display="none";document.body.appendChild(i);let c="",a=1,u=0;P.addEventListener("submit",async e=>{if(e.preventDefault(),c=document.querySelector('input[name="query"]').value.trim(),a=1,!c){iziToast.error({title:"Error",message:"Search query cannot be empty."});return}$(),d();try{p();const r=await y(c,a);u=r.totalHits,r.hits.length>0&&(f(r.hits),B()),(r.hits.length<15||a*15>=u)&&(d(),g())}catch{iziToast.error({title:"Error",message:"An error occurred while fetching images. Please try again later."})}finally{h()}});i.addEventListener("click",async()=>{a+=1;try{p();const e=await y(c,a);f(e.hits),a*15>=u&&(d(),g());const r=document.querySelector(".gallery"),{height:s}=r.firstElementChild.getBoundingClientRect();window.scrollBy({top:s*2,behavior:"smooth"})}catch{iziToast.error({title:"Error",message:"An error occurred while fetching images. Please try again later."})}finally{h()}});
//# sourceMappingURL=index.js.map
